%% reset
clear; close all; clc;
% Add class paths
addpath('functions');
%% load data
stateIdx = 1;
%solar
% folder = 'google_dc\NREL_SAM\SOLAR\'
% stateSAMPVsettings = cellstr([  'AL_34.65_-86.783_2007_2009.csv ' ...
%                               ; 'GA_33.65_-84.433_2007_2009.csv ' ...
%                               ; 'IA_41.017_-94.367_2007_2009.csv' ...
%                               ; 'NC_35.733_-81.383_2007_2009.csv' ...
%                               ; 'OK_36.2_-95.883_2007_2009.csv  ' ...
%                               ; 'OR_45.55_-122.4_2007_2009.csv  ' ...
%                               ; 'SC_33.967_-80.467_2007_2009.csv' ...
%                               ]);
%                           
% % stateSAMPVsettings = cellstr([  'AL_34.65_-86.783.csv ' ...
% %                               ; 'GA_33.65_-84.433.csv ' ...
% %                               ; 'IA_41.017_-94.367.csv' ...
% %                               ; 'NC_35.733_-81.383.csv' ...
% %                               ; 'OK_36.2_-95.883.csv  ' ...
% %                               ; 'OR_45.55_-122.4.csv  ' ...
% %                               ; 'SC_33.967_-80.467.csv' ...
% %                               ]);
%                           
% latArray = [34.65 33.65 41.017 35.733 36.2 45.55 33.967];
% Lat = latArray(stateIdx);
% lonArray = [-86.783 -84.433 -94.367 -81.383 -95.883 -122.4 -80.467];
% Lon = lonArray(stateIdx);
% 
% [Datetimes,AmbienttemperatureC,ACinverterpowerW,Angleofincidencedeg, ...
%         BeamirradianceWm2,DCarraypowerW,DiffuseirradianceWm2,GlobalhorizontalirradianceWm2, ... 
%         ModuletemperatureC,PlaneofarrayirradianceWm2,PowergeneratedbysystemkW,Shadingfactorforbeamradiation, ... 
%         Sunupoverhorizon01,TransmittedplaneofarrayirradianceWm2,Windspeedms] = ...
%         importSAMSolar(strcat(folder,stateSAMPVsettings{stateIdx}));
%     
% PowergeneratedbysystemkW;
% values = PowergeneratedbysystemkW;

% Wind
folder = 'google_dc/NREL_SAM/WIND/'
% stateSAMWind = cellstr([  'AL_34.65_-86.783.csv ' ...
%                               ; 'GA_33.65_-84.433.csv ' ...
%                               ; 'IA_41.017_-94.367.csv' ...
%                               ; 'NC_35.733_-81.383.csv' ...
%                               ; 'OK_36.2_-95.883.csv  ' ...
%                               ; 'OR_45.55_-122.4.csv  ' ...
%                               ; 'SC_33.967_-80.467.csv' ...
%                               ]);
stateSAMWind = cellstr([  'AL_34.65_-86.783_merge.csv ' ...
                              ; 'GA_33.65_-84.433_merge.csv ' ...
                              ; 'IA_41.017_-94.367_merge.csv' ...
                              ; 'NC_35.733_-81.383_merge.csv' ...
                              ; 'OK_36.2_-95.883_merge.csv  ' ...
                              ; 'OR_45.55_-122.4_merge.csv  ' ...
                              ; 'SC_33.967_-80.467_merge.csv' ...
                              ]);
latArray = [34.65 33.65 41.017 35.733 36.2 45.55 33.967];
Lat = latArray(stateIdx);
lonArray = [-86.783 -84.433 -94.367 -81.383 -95.883 -122.4 -80.467];
Lon = lonArray(stateIdx);
[DateTimes,AirtemperatureC,PowergeneratedbysystemkW,Pressureatm,Winddirectiondeg,Windspeedms1]  ...
                    = importSAMWind(strcat(folder,stateSAMWind{stateIdx}));
values = PowergeneratedbysystemkW; 

%%
% values = PowerMW;
% valueNorm = values-mean(values);
valueNorm = values;
fs = 24;
t = (0:length(valueNorm) - 1)/fs;
% plot(t,valueNorm)
% xlabel('Time (days)')
% ylabel('Power')
% axis tight
range = 2*200;

%%
[autocor,lags] = xcorr(valueNorm, range*fs, 'coeff');
plot(lags/fs,autocor)
xlabel('Lag (days)')
ylabel('Autocorrelation')
axis([-range range -0.6 1.1])

%%
% To find the long period, restrict findpeaks to look for peaks separated by 
% more than the short period and with a minimum height of 0.3.
[pksh,lcsh] = findpeaks(autocor);
short = mean(diff(lcsh))/fs

[pklg,lclg] = findpeaks(autocor, ...
    'MinPeakDistance',ceil(short)*fs,'MinPeakheight',0.5);
long = mean(diff(lclg))/fs

hold on
pks = plot(lags(lcsh)/fs,pksh,'or', ...
    lags(lclg)/fs,pklg+0.05,'vk');
hold off
legend(pks,[repmat('Period: ',[2 1]) num2str([short;long],0)])
axis([-range range -0.6 1.1])

%%
figure
fs = 1
range = 48;
[autocor,lags] = xcorr(values, range*fs, 'coeff');
plot(lags/fs,autocor)
xlabel('Lag (hours)')
ylabel('Autocorrelation')
axis([-range range -0.6 1.1])